@page "/counter"
@using LinkSammlungWebApp.Data
@using System.Text.Json
@using System.Net.Http
@using Microsoft.JSInterop
@inject IJSRuntime JSRuntime
@using System.Text
@inject HttpClient http


<h3>Download your data:</h3>

@if (links == null)
{
    <a>Nothing to download yet!</a>
}

@if (links != null)
{
    <div class="text-center mt-3">
        <button class="btn btn-primary" @onclick="DownloadData">Download Data</button>
    </div>
}

@code {
    List<Linksammlung> links = new List<Linksammlung>();

    protected override async Task OnInitializedAsync()
    {
        try
        {
            string data = await http.GetStringAsync("http://localhost:3002/Link");
            links = JsonSerializer.Deserialize<List<Linksammlung>>(data);
        }
        catch
        {
        }
    }

    private async Task DownloadData()
    {
        if (links != null)
        {
            try
            {
                // Serialize the links data to JSON
 
                string jsonData = JsonSerializer.Serialize(links);

                // Create a byte array from the JSON data
                byte[] dataBytes = Encoding.UTF8.GetBytes(jsonData);

                string fileName = $"data_{DateTime.Now:yyyyMMddHHmmss}.txt";

                // Trigger the file download
                await JSRuntime.InvokeVoidAsync("downloadFile", fileName, dataBytes);
            }
            catch
            {

            }
        }

    }
}
